---
- name: Setup Docker host

  hosts: docker

  vars_files:
    - ../vars/main.yaml
    - vars/docker.yaml
    - vars/docker_secrets.yaml

  pre_tasks:
    - name: Update package cache
      become: true
      apt:
        update_cache: true
        cache_valid_time: 3600

  handlers:
    - import_tasks: handlers/main.yaml

  roles:
    - user
    - docker
    - nfs

  tasks:
    - name: Set docker facts
      tags:
        - docker
        - nginx
        - torrent
        - compose
      set_fact:
        docker_data_dir: "/home/{{ ansible_user }}/data"
        docker_puid: "{{ ansible_user_uid }}"
        docker_pgid: "{{ ansible_user_uid }}"
        swag_dns_config: "/home/{{ ansible_user }}/data/swag/dns-conf"
        torrent_config_dir: "/home/{{ ansible_user }}/data/torrent/config/openvpn"

    - name: Copy docker compose over
      tags:
        - docker
        - compose
      template:
        src: templates/docker-compose.yaml
        dest: "/home/{{ ansible_user }}/docker-compose.yaml"
        mode: 0755
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      notify: dc up

    - name: Ensure data dir exists
      tags: docker
      file:
        path: "{{ docker_data_dir }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0750

    - name: Set nginx proxy confs dir
      tags:
        - docker
        - nginx
      set_fact:
        nginx_proxy_confs: "{{ docker_data_dir }}/swag/nginx/proxy-confs"

    - name: Ensure nginx data dir exists
      tags:
        - docker
        - nginx
      file:
        path: "{{ nginx_proxy_confs }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0775

    - name: Copy nginx proxy-confs
      tags:
        - docker
        - nginx
      template:
        src: "{{ item }}"
        dest: "{{ nginx_proxy_confs }}/"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0664
      with_fileglob: templates/proxy_confs/*.conf
      notify: restart nginx

    - name: Create dns config directory
      tags:
        - docker
        - nginx
      file:
        path: "{{ swag_dns_config }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0775

    - name: Copy cloudflare api creds
      tags:
        - docker
        - nginx
        - cloudflare
      copy:
        content: "{{ cloudflare_creds }}"
        dest: "{{ swag_dns_config }}/cloudflare.ini"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0664

    - name: Create torrent config dir
      tags:
        - docker
        - torrent
      file:
        path: "{{ torrent_config_dir }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0776

    - name: Copy torrent config
      tags:
        - docker
        - torrent
      copy:
        content: "{{ item.content }}"
        dest: "{{ torrent_config_dir }}/{{ item.dest }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0776
      loop:
        - content: "{{ qbittorrent_vpn_config }}"
          dest: config.ovpn
        - content: "{{ qbittorrent_vpn_config }}"
          dest: nordvpn.ovpn
        - content: "{{ qbittorrent_vpn_creds }}"
          dest: creds.conf
      loop_control:
        label: "{{ item.dest }}"

    - name: Setup crons
      tags:
        - docker
        - crons
      cron:
        name: "{{ item.name }}"
        minute: "{{ item.minute }}"
        hour: "{{ item.hour }}"
        day: "{{ item.day }}"
        month: "{{ item.month }}"
        weekday: "{{ item.weekday }}"
        job: "{{ item.job }}"
      loop:
        - name: "ping healthcheck"
          minute: "*/2"
          hour: "*"
          day: "*"
          month: "*"
          weekday: "*"
          job: "curl -fsS --retry 3 -o /dev/null {{ docker_healthcheck_url }}"
        - name: "pull images"
          minute: "0"
          hour: "3"
          day: "*"
          month: "*"
          weekday: "7"
          job: "cd /home/henry && docker compose pull && docker compose up -d"
        - name: "restart radarr"
          minute: "0"
          hour: "12"
          day: "*"
          month: "*"
          weekday: "*"
          job: "cd /home/henry && docker compose restart radarr"
        - name: "restart sonarr"
          minute: "0"
          hour: "12"
          day: "*"
          month: "*"
          weekday: "*"
          job: "cd /home/henry && docker compose restart sonarr"
        - name: "restart qbittorrent"
          minute: "0"
          hour: "12"
          day: "*"
          month: "*"
          weekday: "*"
          job: "cd /home/henry && docker compose restart qbittorrent"
        - name: "docker prune images"
          minute: "0"
          hour: "4"
          day: "*"
          month: "*"
          weekday: "1"
          job: "ccd /home/henry && docker image prune"
      loop_control:
        label: "{{ item.name }}"

    - import_tasks: tasks/netdata.yaml

    - name: Ensure sysctl net.ipv4.ip_forward is set to 1
      become: true
      sysctl:
        name: net.ipv4.ip_forward
        value: "1"
        state: present
        reload: yes
