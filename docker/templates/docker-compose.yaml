version: '3.9'
services:
    #-------------------------------------------#
    # Media services
    #-------------------------------------------#
    # transmission:
    #   image: linuxserver/transmission:latest
    #   container_name: transmission
    #   environment:
    #     - PUID=1000
    #     - PGID=1000
    #     - TZ={{ docker_tz }}
    #     # - TRANSMISSION_WEB_HOME=/transmission/
    #   volumes:
    #     - {{ docker_data_dir }}/transmission:/config
    #     - /plex/temp:/downloads
    #     - /plex/watch:/watch
    #   network_mode: service:wireguard
    #   depends_on:
    #     - wireguard
    #   # ports:
    #   #   - 9091:9091
    #   #   - 51413:51413
    #   #   - 51413:51413/udp
    #   restart: unless-stopped

    plex:
      container_name: plex
      image: linuxserver/plex:latest
      network_mode: host
      environment:
        - PUID={{ docker_puid }}
        - PGID={{ docker_puid }}
        - TZ={{ docker_tz }}
        - VERSION=latest
      devices:
        - /dev/dri:/dev/dri
      volumes:
        - {{ docker_data_dir}}/plex:/config
        - /plex:/plex
      restart: unless-stopped
      cpus: 8

    jellyfin:
      image: linuxserver/jellyfin:latest
      container_name: jellyfin
      environment:
        - PUID={{ docker_puid }}
        - PGID={{ docker_puid }}
        - TZ={{ docker_tz }}
        - JELLYFIN_PublishedServerUrl=jellyfin.plexmox.com
      devices:
        - /dev/dri:/dev/dri
      volumes:
        - {{ docker_data_dir}}/jellyfin:/config
        - /plex:/data
      restart: unless-stopped
      networks:
        homelab:

    #-------------------------------------------#
    # General services
    #-------------------------------------------#
    swag:
      container_name: swag
      restart: unless-stopped
      image: linuxserver/swag:latest
      ports:
        - 443:443
        - 80:80
      volumes:
        - {{ docker_data_dir }}/swag:/config
        - {{ docker_data_dir }}/organizr:/organizr:ro
      environment:
        - PUID={{ docker_puid }}
        - PGID={{ docker_puid }}
        - TZ={{ docker_tz }}
        - URL=plexmox.com
        - SUBDOMAINS=wildcard
        - VALIDATION=dns
        - DNSPLUGIN=cloudflare
        - ONLY_SUBDOMAINS=false
        - MAXMINDDB_LICENSE_KEY={{ maxmind_license_key }}
      cap_add: [ 'NET_ADMIN' ]
      networks:
        homelab:

    mariadb:
      container_name: mariadb
      restart: unless-stopped
      image: mariadb
      ports:
        - 3306:3306
      volumes:
        - {{ docker_data_dir }}/mariadb:/var/lib/mysql
      environment:
        - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      networks:
        homelab:

    wireguard:
      container_name: wireguard
      image: linuxserver/wireguard:latest
      cap_add:
        - NET_ADMIN
        - SYS_MODULE
      environment:
        - PUID={{ docker_puid}}
        - PGID={{ docker_pgid}}
        - TZ={{ docker_tz }}
      volumes:
        - {{ docker_data_dir }}/wireguard-tunnel:/config
        - /lib/modules:/lib/modules #optional
      sysctls:
        - net.ipv4.conf.all.src_valid_mark=1
      ports:
        - 9091:9091
      restart: unless-stopped
      networks:
        homelab:

    authelia:
      image: authelia/authelia
      container_name: authelia
      volumes:
        - {{ docker_data_dir }}/authelia:/config
      networks:
        homelab:
      restart: unless-stopped
      environment:
        - TZ={{ docker_tz }}

    redis:
      image: redis:alpine
      container_name: redis
      volumes:
        - {{ docker_data_dir }}/redis:/data
      networks:
        homelab:
      restart: unless-stopped
      environment:
        - TZ={{ docker_tz }}

    #-------------------------------------------#
    # Montioring services
    #-------------------------------------------#
    prometheus:
      image: prom/prometheus:v2.36.2
      user: "1000:1000"
      volumes:
        - {{ docker_data_dir }}/prometheus/config:/etc/prometheus/
        - {{ docker_data_dir }}/prometheus/data:/prometheus
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/usr/share/prometheus/console_libraries'
        - '--web.console.templates=/usr/share/prometheus/consoles'
      ports:
        - 9090:9090
      networks:
        homelab:
      restart: always

    grafana:
      container_name: grafana
      image: grafana/grafana
      user: "{{ docker_puid }}"
      volumes:
        - {{ docker_data_dir }}/grafana:/var/lib/grafana
      restart: unless-stopped
      networks:
        homelab:
        monitoring:

networks:
    homelab:
    monitoring:
