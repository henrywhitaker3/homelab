version: '3.9'
services:
    #-------------------------------------------#
    # Media services
    #-------------------------------------------#
    radarr:
      container_name: radarr
      restart: unless-stopped
      image: linuxserver/radarr:nightly
      volumes:
        - {{ docker_data_dir }}/radarr/v3:/config
        - /plex:/data
      environment:
        - PUID={{ docker_puid }}
        - PGID={{ docker_puid }}
        - TZ={{ docker_tz }}
      networks:
        homelab:

    sonarr:
      container_name: sonarr
      restart: unless-stopped
      image: linuxserver/sonarr:latest
      volumes:
        - {{ docker_data_dir }}/sonarr:/config
        - /plex:/data
      environment:
        - PUID={{ docker_puid }}
        - PGID={{ docker_puid }}
        - TZ={{ docker_tz }}
      networks:
        homelab:

    prowlarr:
      container_name: prowlarr
      restart: unless-stopped
      image: linuxserver/prowlarr:develop
      volumes:
        - {{ docker_data_dir }}/prowlarr:/config
      environment:
        - PUID={{ docker_puid }}
        - PGID={{ docker_puid }}
        - TZ={{ docker_tz }}
      networks:
        homelab:

    transmission:
      image: linuxserver/transmission:latest
      container_name: transmission
      environment:
        - PUID=1000
        - PGID=1000
        - TZ={{ docker_tz }}
        # - TRANSMISSION_WEB_HOME=/transmission/
      volumes:
        - {{ docker_data_dir }}/transmission:/config
        - /plex/temp:/downloads
        - /plex/watch:/watch
      network_mode: service:wireguard
      depends_on:
        - wireguard
      # ports:
      #   - 9091:9091
      #   - 51413:51413
      #   - 51413:51413/udp
      restart: unless-stopped

    overseerr:
      container_name: overseerr
      restart: unless-stopped
      image: sctx/overseerr
      environment:
        - TZ={{ docker_tz }}
      volumes:
      - {{ docker_data_dir }}/overseerr:/app/config
      networks:
        homelab:

    plex:
      container_name: plex
      image: linuxserver/plex:latest
      network_mode: host
      environment:
        - PUID={{ docker_puid }}
        - PGID={{ docker_puid }}
        - TZ={{ docker_tz }}
        - VERSION=latest
      devices:
        - /dev/dri:/dev/dri
      volumes:
        - {{ docker_data_dir}}/plex:/config
        - /plex:/plex
      restart: unless-stopped
      cpus: 8

    jellyfin:
      image: linuxserver/jellyfin:latest
      container_name: jellyfin
      environment:
        - PUID={{ docker_puid }}
        - PGID={{ docker_puid }}
        - TZ={{ docker_tz }}
        - JELLYFIN_PublishedServerUrl=jellyfin.plexmox.com
      devices:
        - /dev/dri:/dev/dri
      volumes:
        - {{ docker_data_dir}}/jellyfin:/config
        - /plex:/data
      restart: unless-stopped
      networks:
        homelab:

    #-------------------------------------------#
    # General services
    #-------------------------------------------#
    swag:
      container_name: swag
      restart: unless-stopped
      image: linuxserver/swag:latest
      ports:
        - 443:443
        - 80:80
      volumes:
        - {{ docker_data_dir }}/swag:/config
        - {{ docker_data_dir }}/organizr:/organizr:ro
      environment:
        - PUID={{ docker_puid }}
        - PGID={{ docker_puid }}
        - TZ={{ docker_tz }}
        - URL=plexmox.com
        - SUBDOMAINS=wildcard
        - VALIDATION=dns
        - DNSPLUGIN=cloudflare
        - ONLY_SUBDOMAINS=false
        - MAXMINDDB_LICENSE_KEY={{ maxmind_license_key }}
      cap_add: [ 'NET_ADMIN' ]
      networks:
        homelab:

    mariadb:
      container_name: mariadb
      restart: unless-stopped
      image: mariadb
      ports:
        - 3306:3306
      volumes:
        - {{ docker_data_dir }}/mariadb:/var/lib/mysql
      environment:
        - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      networks:
        homelab:

    organizr:
      container_name: organizr
      restart: unless-stopped
      image: organizr/organizr:latest
      volumes:
        - {{ docker_data_dir }}/organizr:/config
      environment:
        - fpm=true
        - branch=dev
        - TZ={{ docker_tz }}
        - PUID={{ docker_puid }}
        - PGID={{ docker_pgid }}
      networks:
        homelab:

    wireguard:
      container_name: wireguard
      image: linuxserver/wireguard:latest
      cap_add:
        - NET_ADMIN
        - SYS_MODULE
      environment:
        - PUID={{ docker_puid}}
        - PGID={{ docker_pgid}}
        - TZ={{ docker_tz }}
      volumes:
        - {{ docker_data_dir }}/wireguard-tunnel:/config
        - /lib/modules:/lib/modules #optional
      sysctls:
        - net.ipv4.conf.all.src_valid_mark=1
      restart: unless-stopped
      networks:
        homelab:

    authelia:
      image: authelia/authelia
      container_name: authelia
      volumes:
        - {{ docker_data_dir }}/authelia:/config
      networks:
        homelab:
      restart: unless-stopped
      environment:
        - TZ={{ docker_tz }}

    redis:
      image: redis:alpine
      container_name: redis
      volumes:
        - {{ docker_data_dir }}/redis:/data
      networks:
        homelab:
      restart: unless-stopped
      environment:
        - TZ={{ docker_tz }}

    firefox:
      image: jlesage/firefox
      volumes:
        - {{ docker_data_dir }}/firefox:/config
      networks:
        homelab:
      environment:
        - TZ={{ docker_tz }}

    #-------------------------------------------#
    # Automation services
    #-------------------------------------------#
    # drone:
    #   container_name: drone
    #   restart: unless-stopped
    #   image: drone/drone:2
    #   volumes:
    #     - {{ docker_data_dir }}/drone:/data
    #   environment:
    #     - DRONE_GITHUB_CLIENT_ID={{ drone.github.client_id }}
    #     - DRONE_GITHUB_CLIENT_SECRET={{ drone.github.client_secret }}
    #     - DRONE_RPC_SECRET={{ drone.rpc_secret }}
    #     - DRONE_SERVER_HOST=drone.plexmox.com
    #     - DRONE_SERVER_PROTO=https
    #     - DRONE_USER_FILTER=henrywhitaker3
    #   networks:
    #     homelab:

    drone_runner:
      container_name: drone_runner
      restart: unless-stopped
      image: drone/drone-runner-docker:1
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      environment:
        - DRONE_RPC_HOST=drone.plexmox.com
        - DRONE_RPC_PROTO=https
        - DRONE_RPC_SECRET={{ drone.rpc_secret }}
        - DRONE_RUNNER_CAPACITY=4
        - DRONE_RUNNER_NAME=docker
      networks:
        homelab:

    #-------------------------------------------#
    # Montioring services
    #-------------------------------------------#
    prometheus:
      image: prom/prometheus:v2.36.2
      user: "1000:1000"
      volumes:
        - {{ docker_data_dir }}/prometheus/config:/etc/prometheus/
        - {{ docker_data_dir }}/prometheus/data:/prometheus
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/usr/share/prometheus/console_libraries'
        - '--web.console.templates=/usr/share/prometheus/consoles'
      ports:
        - 9090:9090
      networks:
        homelab:
      restart: always

    grafana:
      container_name: grafana
      image: grafana/grafana
      user: "{{ docker_puid }}"
      volumes:
        - {{ docker_data_dir }}/grafana:/var/lib/grafana
      restart: unless-stopped
      networks:
        homelab:
        monitoring:

    speedtest:
      container_name: speedtest
      restart: unless-stopped
      image: henrywhitaker3/speedtest-tracker:dev
      volumes:
        - {{ docker_data_dir }}/speedtest:/config
      environment:
        - PUID={{ docker_puid }}
        - PGID={{ docker_puid }}
        - TZ={{ docker_tz }}
        - BASE_PATH=/speedtest
        - OOKLA_EULA_GDPR=true
      networks:
        homelab:

    monitorr:
      container_name: monitorr
      restart: unless-stopped
      image: monitorr/monitorr:latest
      volumes:
        - {{ docker_data_dir }}/monitorr:/app
      environment:
        - TZ={{ docker_tz }}
      networks:
        homelab:

    tautulli:
      container_name: tautulli
      restart: unless-stopped
      image: linuxserver/tautulli:latest
      volumes:
        - {{ docker_data_dir }}/tautulli:/config
      environment:
        - PUID={{ docker_puid }}
        - PGID={{ docker_puid }}
        - TZ={{ docker_tz }}
      networks:
        homelab:

networks:
    homelab:
    monitoring:
