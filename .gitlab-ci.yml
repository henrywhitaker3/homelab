stages:
  - init
  - lint
  - plan
  - deploy

image: henrywhitaker3/ansible-terraform

###########
# Ansible #
###########
.playbooks:
  variables:
    ANSIBLE_CONFIG: ./ansible.cfg
  parallel:
    matrix:
      - PLAYBOOK: [docker/main.yaml, vpn/main.yaml, k8s/main.yaml, haproxy/main.yaml, speakers/main.yaml, proxmox/main.yaml, pihole/main.yaml]

ansible lint:
  stage: lint
  extends: .playbooks
  script:
    - task drone-vault-pass VAULT_PASS="$VAULT_PASS"
    - task lint PLAYBOOK=k8s/main.yaml
  only:
    - merge_request

ansible play:
  stage: deploy
  extends: .playbooks
  script:
    - eval $(ssh-agent -s)
    - task drone-playbook PLAYBOOK=docker/main.yaml TARGET_IPS="10.0.0.160" VAULT_PASS="$VAULT_PASS" SSH_KEY="$SSH_KEY"
  only:
    - main


#############
# Terraform #
#############
.terraform:base:
  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  before_script:
    - cd terraform

.terraform:cache:push:
  cache:
    key: TF_CACHE
    paths:
      - terraform/.terraform
    policy: push

.terraform:cache:pull:
  cache:
    key: TF_CACHE
    paths:
      - terraform/.terraform
    policy: pull

tf init:
  stage: init
  extends:
    - .terraform:base
    - .terraform:cache:push
  script:
    - |
      terraform init \
          -backend-config="address=https://gitlab.com/api/v4/projects/45412263/terraform/state/tf-state" \
          -backend-config="lock_address=https://gitlab.com/api/v4/projects/45412263/terraform/state/tf-state/lock" \
          -backend-config="unlock_address=https://gitlab.com/api/v4/projects/45412263/terraform/state/tf-state/lock" \
          -backend-config="username=henrywhitaker3" \
          -backend-config="password=$TERRAFORM_ACCESS_TOKEN" \
          -backend-config="lock_method=POST" \
          -backend-config="unlock_method=DELETE" \
          -backend-config="retry_wait_min=5"
  only:
    - merge_request
    - main

tf validate:
  stage: lint
  extends:
    - .terraform:base
    - .terraform:cache:pull
  script:
    - terraform validate
  only:
    - merge_request

tf plan:
  stage: plan
  extends:
    - .terraform:base
    - .terraform:cache:pull
  script:
    - terraform plan -out planfile
  artifacts:
    paths:
      - terraform/planfile
  only:
    - merge_request
    - main

tf deploy:
  stage: deploy
  extends:
    - .terraform:base
    - .terraform:cache:pull
  script:
    - terraform apply -auto-approve planfile
  dependencies:
    - tf plan
  environment:
    name: home
  only:
    - main
  when: manual
