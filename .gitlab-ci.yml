include:
  - project: 'renovate-bot/renovate-runner'
    file: '/templates/renovate.gitlab-ci.yml'

stages:
  - lint
  - plan
  - deploy
  - renovate

image: henrywhitaker3/pipeline

###########
# Ansible #
###########
.playbooks:
  variables:
    ANSIBLE_CONFIG: ./ansible.cfg
  parallel:
    matrix:
      - PLAYBOOK:
        - vpn
        - k3s
        - haproxy
        # - speakers
        - pihole
        - mariadb
  rules:
    - if: $SKIP_ANSIBLE == "true"
      when: never
    - if: $CI_COMMIT_BRANCH == "main" && $ANSIBLE_RUN_ALL == "true"
    - if: $CI_COMMIT_BRANCH == "main" && $SKIP_ANSIBLE != "true"
      changes:
        - ansible/playbooks/$PLAYBOOK/*
        - ansible/playbooks/$PLAYBOOK/**/*
        - ansible/inventory/*
        - ansible/inventory/**/*
        - ansible/roles/**/*
        - ansible/inventory
        - .gitlab-ci.yml
        - .ansible-lint

ansible lint:
  stage: lint
  extends: .playbooks
  script:
    - task ci:age:key AGE_KEY="$AGE_KEY"
    - task ci:lint PLAYBOOK=ansible/playbooks/$PLAYBOOK/main.yaml

ansible play:
  stage: deploy
  extends: .playbooks
  script:
    - eval $(ssh-agent -s)
    - task ci:playbook PLAYBOOK=ansible/playbooks/$PLAYBOOK/main.yaml AGE_KEY="$AGE_KEY" SSH_KEY="$SSH_KEY"
  environment:
    name: "$PLAYBOOK"

#############
# Terraform #
#############
.terraform:base:
  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  before_script:
    - cd terraform
    - |
      terraform init \
          -backend-config="address=https://gitlab.com/api/v4/projects/45412263/terraform/state/tf-state" \
          -backend-config="lock_address=https://gitlab.com/api/v4/projects/45412263/terraform/state/tf-state/lock" \
          -backend-config="unlock_address=https://gitlab.com/api/v4/projects/45412263/terraform/state/tf-state/lock" \
          -backend-config="username=henrywhitaker3" \
          -backend-config="password=$TERRAFORM_ACCESS_TOKEN" \
          -backend-config="lock_method=POST" \
          -backend-config="unlock_method=DELETE" \
          -backend-config="retry_wait_min=5"
  rules:
    - if: $SKIP_TERRAFORM == "true"
      when: never
    - if: $CI_COMMIT_BRANCH == "main" && $SKIP_TERRAFORM != "true"
      changes:
        - terraform/*
        - .gitlab-ci.yml

tf validate:
  stage: lint
  extends:
    - .terraform:base
  script:
    - terraform validate
  artifacts:
    paths:
      - terraform/planfile
  rules:
    - !reference [.terraform:base, rules]
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - terraform/*

tf plan:
  stage: plan
  extends:
    - .terraform:base
  script:
    - terraform plan -out planfile
  artifacts:
    paths:
      - terraform/planfile
  rules:
    - !reference [.terraform:base, rules]

tf deploy:
  stage: deploy
  extends:
    - .terraform:base
  script:
    - terraform apply -auto-approve planfile
  dependencies:
    - tf plan
  environment:
    name: infra
  when: manual

##########
# Docker #
##########
build docker image:
  stage: deploy
  image:
    name: gcr.io/kaniko-project/executor:v1.21.1-debug
    entrypoint: [""]
  script:
    - echo $DOCKER_TOKEN | base64 -d > /kaniko/.docker/config.json
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "henrywhitaker3/pipeline:latest"
  rules:
    - if: ($BUILD_DOCKER_IMAGES == "true") && $CI_COMMIT_BRANCH == "main"
    - if: $SKIP_DOCKER_IMAGES == "true"
      when: never
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        - Dockerfile

############
# Renovate #
############

renovate:
  stage: renovate
  image: ghcr.io/renovatebot/renovate:37
  variables:
    RENOVATE_EXTRA_FLAGS: henrywhitaker3/homelab
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_PIPELINE_SOURCE == "push"'
