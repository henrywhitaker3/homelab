---
- name: Configure k8s admin server

  hosts: k8s-control-1

  roles:
    - k8s_tools

  vars_files:
    - vars/k8s.yaml

  tasks:
    - name: Copy argo over
      tags:
        - k8s
        - argo
      ansible.posix.synchronize:
        src: argo
        dest: "/home/{{ ansible_user }}/"
        delete: true
        recursive: true
        archive: false
        checksum: true

    - name: Create argo namespace
      tags:
        - k8s
        - argo
      become: true
      ansible.builtin.command: "kubectl create namespace argo"
      register: argo_namespace_created
      changed_when: "'created' in argo_namespace_created.stdout"
      failed_when: false

    - name: Is argo installed?
      tags:
        - k8s
        - argo
      become: true
      ansible.builtin.command: "helm -n argo status argo"
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      register: argo_helm_status
      changed_when: false
      failed_when: false

    - name: Install argo controller
      tags:
        - k8s
        - argo
      become: true
      ansible.builtin.command: "helm upgrade --install -n argo -f /home/{{ ansible_user }}/argo/argocd/values.yaml argo /home/{{ ansible_user }}/argo/argocd"
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      when: "'not found' in argo_helm_status.stderr"

    - name: Is argo apps installed?
      tags:
        - k8s
        - argo
      become: true
      ansible.builtin.command: "kubectl -n argo get applications"
      changed_when: false
      register: argo_apps_status

    - name: Wait a bit for the install
      tags:
        - k8s
        - argo
      ansible.builtin.pause:
        seconds: 30
      when: "'No resources found' in argo_apps_status.stderr"

    - name: Install argo apps
      tags:
        - k8s
        - argo
      become: true
      ansible.builtin.shell: "set -o pipefail && helm -n argo -f /home/{{ ansible_user }}/argo/apps/values.yaml template /home/{{ ansible_user }}/argo/apps | kubectl apply -f -"
      args:
        executable: /usr/bin/bash
      when: "'No resources found' in argo_apps_status.stderr"

    - name: Delete helm labels from apps install
      tags:
        - k8s
        - argo
      become: true
      ansible.builtin.command: "kubectl -n argo delete secret -l owner=helm,name=argocd"
      when: "'No resources found' in argo_apps_status.stderr"

    - name: Wait a bit for the apps to install
      tags:
        - k8s
        - argo
      ansible.builtin.pause:
        seconds: 45
      when: "'No resources found' in argo_apps_status.stderr"

    - name: Install standalone manifests
      tags:
        - k8s
        - standalone
      become: true
      ansible.builtin.command: "kubectl apply -f /home/{{ ansible_user }}/argo/standalone/"
      register: apply_standalone_manifests
      changed_when: "'created' in apply_standalone_manifests.stdout"
