---
- name: Setup the control plane

  become: true

  hosts: k8s_control

  vars_files:
    - vars/k8s.yaml
    - vars/k8s_secrets.yaml

  tasks:
    - name: Init cluster
      ansible.builtin.command:
        cmd: "systemd-run -p RestartSec=2 \
                          -p Restart=on-failure \
                          --unit=k3s-init \
                          k3s server --cluster-init --token {{ k3s_token }} {{ k3s_server_args | default('') }}"
        creates: "/etc/systemd/system/k3s.service"
      when: ansible_host == hostvars[groups['k8s_control'][0]]['ansible_host']

    - name: Join other nodes
      ansible.builtin.command:
        cmd: "systemd-run -p RestartSec=2 \
                          -p Restart=on-failure \
                          --unit=k3s-init \
                          k3s server --server https://{{ hostvars[groups['k8s_control'][0]]['ansible_host'] }}:6443 --token {{ k3s_token }} {{ k3s_server_args | default('') }}"
        creates: "/etc/systemd/system/k3s.service"
      when: ansible_host != hostvars[groups['k8s_control'][0]]['ansible_host']

    - name: Verify that all nodes actually joined
      ansible.builtin.command:
        cmd: k3s kubectl get nodes -l "node-role.kubernetes.io/master=true" -o=jsonpath="{.items[*].metadata.name}"
      register: nodes
      until: nodes.rc == 0 and (nodes.stdout.split() | length) == (groups['k8s_control'] | length)
      retries: "{{ retry_count | default(20) }}"
      delay: 10
      changed_when: false

    - name: Kill the temporary service used for initialization
      ansible.builtin.systemd:
        name: k3s-init
        state: stopped
      failed_when: false

    - name: Copy K3s service file
      register: k3s_service
      ansible.builtin.template:
        src: "control.service"
        dest: "/etc/systemd/system/k3s.service"
        owner: root
        group: root
        mode: 0644

    - name: Enable and check K3s service
      ansible.builtin.systemd:
        name: k3s
        state: started
        daemon_reload: true
        enabled: true

    - name: Create kubectl symlink
      ansible.builtin.file:
        src: /usr/local/bin/k3s
        dest: /usr/local/bin/kubectl
        state: link

    - name: Create crictl symlink
      ansible.builtin.file:
        src: /usr/local/bin/k3s
        dest: /usr/local/bin/crictl
        state: link

    - name: Create directory .kube
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/.kube"
        state: directory
        owner: "{{ ansible_user }}"
        mode: "0750"

    - name: Copy config file to user home directory
      ansible.builtin.copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "/home/{{ ansible_user }}/.kube/config"
        remote_src: true
        owner: "{{ ansible_user }}"
        mode: 0600

    - name: Configure kubectl cluster to {{ endpoint_url }}
      ansible.builtin.command: >-
        k3s kubectl config set-cluster default
          --server={{ endpoint_url }}
          --kubeconfig /home/{{ ansible_user }}/.kube/config
      changed_when: true
      vars:
        endpoint_url: https://10.0.0.6:6443
