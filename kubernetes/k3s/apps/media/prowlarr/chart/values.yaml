generic:
  nameOverride: prowlarr
  fullnameOverride: prowlarr

  replicaCount: 1

  image:
    repository: linuxserver/prowlarr
    pullPolicy: IfNotPresent
    tag: "1.16.2"

  service:
    port: 9696

  resources:
    requests:
      cpu: 200m
      memory: 200Mi

  ingress:
    enabled: true
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/auth-url: https://plexmox.com/api/v2/auth?group=1
      nginx.ingress.kubernetes.io/auth-signin: https://plexmox.com
    hosts:
      - host: plexmox.com
        paths:
          - path: /prowlarr
            pathType: ImplementationSpecific
    tls:
    - secretName: plexmox-com-tls
      hosts:
        - plexmox.com

  pvc:
    enabled: true
    mountPath: /config
    storageClassName: longhorn
    size: 1Gi

  deploymentStrategy:
    type: Recreate

  probes:
    initialDelaySeconds: 15
    timeoutSeconds: 5

  config:
    PUID: "1000"
    PGID: "1000"
    TZ:  Europe/London

  volumes:
    - name: wg-config-raw
      secret:
        secretName: prowlarr-wireguard
        optional: false
    - name: wg-config
      emptyDir: {}

  volumeMounts:
    - mountPath: /config/wg_confs
      name: wg-config

  initContainers:
    - name: wg-configer
      image: alpine:latest
      command:
        - /bin/sh
        - -c
        - |
          cp /wg/wg0.conf /config/wg0.conf
      volumeMounts:
        - mountPath: /wg
          name: wg-config-raw
          readOnly: true
        - mountPath: /config
          name: wg-config

  vpn:
    enabled: true
    secret:
      key: prowlarr-tunnel
      mount:
        enabled: false

  # Keep it here until i figure out vpn gateway
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        preference:
          matchExpressions:
          - key: quicksync
            operator: In
            values:
            - available
