namespaceOverride: monitoring

cleanPrometheusOperatorObjectNames: true

alertmanager:
  enabled: true

  alertmanagerSpec:
    replicas: 2
    useExistingSecret: true
    configSecret: alertmanager-config

  ingress:
    enabled: true

    ingressClassName: internal

    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/auth-url: https://auth.plexmox.com/api/verify
      nginx.ingress.kubernetes.io/auth-signin: https://auth.plexmox.com

    hosts:
      - alerts.plexmox.com

    tls:
      - secretName: alerts-plexmox-com-tls
        hosts:
          - alerts.plexmox.com

nodeExporter:
  enabled: false

kubelet:
  enabled: true
  serviceMonitor:
    metricRelabelings:
      # Drop high cardinality labels
      - action: labeldrop
        regex: (uid)
      - action: labeldrop
        regex: (id|name)
      - action: drop
        sourceLabels: ["__name__"]
        regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
      - action: drop
        sourceLabels: ["__name__"]
        regex: (apiserver|etcd)_request(|_sli|_slo)_duration_seconds_bucket
      - action: drop
        sourceLabels: ["__name__"]
        regex: apiserver_request_body_size_bytes_bucket
      - action: drop
        sourceLabels: ["__name__"]
        regex: apiserver_(response|watch_events)_sizes_bucket
      - action: drop
        sourceLabels: ["__name__"]
        regex: (kubelet_runtime_operations|storage_operation)_duration_seconds_bucket
      - action: drop
        sourceLabels: ["__name__"]
        regex: (apiserver|etcd)_request_total
      - action: drop
        sourceLabels: ["__name__"]
        regex: apiserver_request_duration_seconds_(count|sum)
      - action: drop
        sourceLabels: ["__name__"]
        regex: etcd_request_duration_seconds_(count|sum)
    probesMetricRelabelings:
      - action: drop
        sourceLabels: ["__name__"]
        regex: prober_probe_duration_seconds_bucket
    cAdvisorMetricRelabelings:
      - action: labeldrop
        regex: (uid)
      - action: labeldrop
        regex: (id|name|image)
      - action: labeldrop
        regex: (endpoint|metrics_path|instance)

kubeApiServer:
  enabled: true
  serviceMonitor:
    metricRelabelings:
      # Drop high cardinality labels
      - action: drop
        sourceLabels: ["__name__"]
        regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
      - action: drop
        sourceLabels: ["__name__"]
        regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
      - action: drop
        sourceLabels: ["__name__"]
        regex: apiserver_request_body_size_bytes_bucket
      - action: drop
        sourceLabels: ["__name__"]
        regex: workqueue_(queue|work)_duration_seconds_bucket
      - action: drop
        sourceLabels: ["__name__"]
        regex: apiserver_admission_controller_admission_duration_seconds_bucket

kubeEtcd:
  enabled: true
  endpoints:
    - 10.0.0.20
    - 10.0.0.21
    - 10.0.0.24
  serviceMonitor:
    metricRelabelings:
      - action: drop
        sourceLabels: ["__name__"]
        regex: (etcd_request_duration_seconds_bucket)

kubeControllerMnager:
  enabled: true
  endpoints:
    - 10.0.0.20
    - 10.0.0.21
    - 10.0.0.24

kubeProxy:
  enabled: true
  endpoints:
    - 10.0.0.20
    - 10.0.0.21
    - 10.0.0.24

kubeScheduler:
  enabled: true
  endpoints:
    - 10.0.0.20
    - 10.0.0.21
    - 10.0.0.24

defaultRules:
  rules:
    kubeControllerManager: false
    kubeProxy: false
    kubeSchedulerAlerting: false
    kubeSchedulerRecording: false

grafana:
  enabled: true
  replicas: 2

  admin:
    existingSecret: grafana-creds

  env:
    GF_AUTH_GENERIC_OAUTH_API_URL: https://auth.plexmox.com/api/oidc/userinfo
    GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://auth.plexmox.com/api/oidc/authorization
    GF_AUTH_GENERIC_OAUTH_CLIENT_ID: grafana
    GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://auth.plexmox.com/api/oidc/token
    GF_DATABASE_NAME: grafana
    GF_DATABASE_HOST: mariadb.mariadb.svc:3306
    GF_DATABASE_USER: grafana
    GF_DATABASE_SSL_MODE: disable
    GF_DATABASE_TYPE: mysql

  envValueFrom:
    GF_DATABASE_PASSWORD:
      secretKeyRef:
        name: grafana-creds
        key: db_password
    GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET:
      secretKeyRef:
        name: grafana-creds
        key: client_secret

  grafana.ini:
    server:
      root_url: https://grafana.plexmox.com
    auth:
      oauth_auto_login: true
    auth.basic:
      enabled: true
    auth.generic_oauth:
      enabled: true
      name: Authelia
      icon: signin
      scopes: openid profile email groups
      empty_scopes: false
      login_attribute_path: preferred_username
      groups_attribute_path: groups
      name_attribute_path: name
      use_pkce: true
    auth.generic_oauth.group_mapping:
      org_id: 1
      role_attribute_path: |
        contains(groups[*], 'admin') && 'Admin' || contains(groups[*], 'people') && 'Viewer'

  ingress:
    enabled: true

    ingressClassName: internal

    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/auth-url: https://auth.plexmox.com/api/verify
      nginx.ingress.kubernetes.io/auth-signin: https://auth.plexmox.com

    hosts:
      - grafana.plexmox.com

    tls:
      - secretName: grafana-plexmox-com-tls
        hosts:
          - grafana.plexmox.com

  defaultDashboardsEditable: false

  sidecar:
    dashboards:
      annotations:
        grafana_folder: Kubernetes
      folderAnnotation: grafana_folder
      provider:
        foldersFromFilesStructure: true
    # datasources:
      # url: http://thanos-query-frontend.thanos.svc.cluster.local:10902

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: default
          orgId: 1
          folder: Custom
          type: file
          disableDeletion: true
          editable: false
          options:
            path: /var/lib/grafana/dashboards/default
        - name: postgres
          orgId: 1
          folder: Postgres
          type: file
          disableDeletion: true
          editable: false
          options:
            path: /var/lib/grafana/dashboards/postgres

  dashboards:
    default:
      haproxy:
        gnetId: 12693
        revision: 7
        datasource: Prometheus
      node_exporter:
        gnetId: 1860
        revision: 33
        datasource: Prometheus
      argocd:
        gnetId: 14584
        revision: 1
        datasource: Prometheus
      cert-manager:
        gnetId: 11001
        revision: 1
        datasource: Prometheus
      mysql-overview:
        gnetId: 14057
        revision: 1
        datasource: Prometheus
      golang:
        gnetId: 14061
        revision: 1
        datasource: Prometheus
      redis:
        gnetId: 14091
        revision: 1
        datasource: Prometheus
      alertmanager:
        gnetId: 9578
        revision: 4
        datasource: Prometheus
      adguard:
        gnetId: 20799
        revision: 6
        datasource:
          - { name: DS_PROMETHEUS, value: Prometheus }
      smarctl:
        url: https://raw.githubusercontent.com/blesswinsamuel/grafana-dashboards/main/dashboards/dist/smartctl.json
        datasource:
          - { name: DS_PROMETHEUS, value: Prometheus }
      dragonfly:
        url: https://raw.githubusercontent.com/dragonflydb/dragonfly-operator/main/monitoring/grafana-dashboard.json
        datasource:
          - { name: DS_PROMETHEUS, value: Prometheus }
    postgres:
      pgbackrest:
        url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/pgbackrest.json
        datasource: Prometheus
      podDetails:
        url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/pod_details.json
        datasource: Prometheus
      postgresDetails:
        url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/postgresql_details.json
        datasource: Prometheus
      postgresOverview:
        url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/postgresql_overview.json
        datasource: Prometheus
      postgresServiceHealth:
        url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/postgresql_service_health.json
        datasource: Prometheus
      queryStats:
        url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/query_statistics.json
        datasource: Prometheus

  additionalDataSources:
    - name: Loki
      ordId: 1
      access: proxy
      type: loki
      url: http://loki-gateway
      jsonData:
        maxLines: 250

prometheus:
  ingress:
    enabled: true

    ingressClassName: internal

    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/auth-url: https://auth.plexmox.com/api/verify
      nginx.ingress.kubernetes.io/auth-signin: https://auth.plexmox.com

    hosts:
      - prometheus.plexmox.com

    tls:
      - secretName: prometheus-plexmox-com-tls
        hosts:
          - prometheus.plexmox.com

  thanosService:
    enabled: true
  thanosServiceMonitor:
    enabled: true

  prometheusSpec:
    replicas: 2
    replicaExternalLabelName: __replica__

    enableRemoteWriteReceiver: true
    scrapeConfigSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false

    # thanos:
    #   objectStorageConfig:
    #     existingSecret:
    #       name: thanos-objstore-config
    #       key: config.yaml

    externalLabels:
      cluster: main

    retention: 14d
    retentionSize: 25GB

    walCompression: true

    enableFeatures:
      - memory-snapshot-on-shutdown
      - new-service-discovery-manager

    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn-no-backups
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 30Gi
