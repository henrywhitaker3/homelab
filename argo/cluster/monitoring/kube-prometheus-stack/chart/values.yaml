namespaceOverride: monitoring

alertmanager:
  enabled: true

  ingress:
    enabled: true

    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/auth-url: https://auth.plexmox.com/api/verify
      nginx.ingress.kubernetes.io/auth-signin: https://auth.plexmox.com

    hosts:
      - alerts.plexmox.com

    tls:
      - secretName: alerts-plexmox-com-tls
        hosts:
          - alerts.plexmox.com

nodeExporter:
  enabled: false

kubeEtcd:
  enabled: true

  endpoints:
    - 10.0.0.20
    - 10.0.0.21
    - 10.0.0.24

grafana:
  enabled: true

  admin:
    existingSecret: grafana-creds

  ingress:
    enabled: true

    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/auth-url: https://auth.plexmox.com/api/verify
      nginx.ingress.kubernetes.io/auth-signin: https://auth.plexmox.com

    hosts:
      - grafana.plexmox.com

    tls:
      - secretName: grafana-plexmox-com-tls
        hosts:
          - grafana.plexmox.com

  sidecar:
    dashboards:
      folderAnnotation: grafana_folder
      provider:
        foldersFromFilesStructure: true

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: default
          orgId: 1
          folder: Custom
          type: file
          disableDeletion: true
          editable: false
          options:
            path: /var/lib/grafana/dashboards/default

  dashboards:
    default:
      haproxy:
        gnetId: 12693
        revision: 7
        datasource: Prometheus
      node_exporter:
        gnetId: 1860
        revision: 33
        datasource: Prometheus
      argocd:
        gnetId: 14584
        revision: 1
        datasource: Prometheus
      cert-manager:
        gnetId: 11001
        revision: 1
        datasource: Prometheus
      ingress-nginx:
        gnetId: 9614
        revision: 1
        datasource: Prometheus
      mysql-overview:
        gnetId: 14057
        revision: 1
        datasource: Prometheus
      golang:
        gnetId: 14061
        revision: 1
        datasource: Prometheus
      redis:
        gnetId: 14091
        revision: 1
        datasource: Prometheus

  additionalDataSources:
    - name: Loki
      ordId: 1
      access: proxy
      type: loki
      url: http://loki-gateway
      jsonData:
        maxLines: 250

prometheus:
  ingress:
    enabled: true

    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/auth-url: https://auth.plexmox.com/api/verify
      nginx.ingress.kubernetes.io/auth-signin: https://auth.plexmox.com

    hosts:
      - prometheus.plexmox.com

    tls:
      - secretName: prometheus-plexmox-com-tls
        hosts:
          - prometheus.plexmox.com

  persistentVolume:
    enabled: true
    size: 50Gi
    storageClass: longhorn

  prometheusSpec:
    # ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false

    retention: 7d

    additionalScrapeConfigs:
      - job_name: kubernetes-service-endpoints
        kubernetes_sd_configs:
        - role: service
        relabel_configs:

        # annotation 'prometheus.io/scrape' must be set to 'true'
        - action: keep
          regex: true
          source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]

        # service cannot be in kube-system or prom namespaces
        - action: drop
          regex: (kube-system|prom)
          source_labels: [__meta_kubernetes_namespace]

        # service port name must end with word 'metrics'
        - action: keep
          regex: .*metrics
          source_labels: [__meta_kubernetes_service_port_name]

        # allow override of http scheme
        - action: replace
          regex: (https?)
          source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
          target_label: __scheme__

        # allow override of default /metrics path
        - action: replace
          regex: (.+)
          source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
          target_label: __metrics_path__

        # allow override of default port
        - action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
          target_label: __address__

        - {action: labelmap, regex: __meta_kubernetes_service_label_(.+)}

        - action: replace
          source_labels: [__meta_kubernetes_namespace]
          target_label: kubernetes_namespace

        - action: replace
          source_labels: [__meta_kubernetes_service_name]
          target_label: kubernetes_name

      - job_name: 'haproxy'
        static_configs:
          - targets:
            - 'jump.lab:8404'
            - 'k8s.lab:8404'

      - job_name: 'mariadb'
        static_configs:
          - targets:
            - 'mariadb-1.lab:9104'
            - 'mariadb-2.lab:9104'

      - job_name: 'node_exporter'
        static_configs:
          - targets:
            - 'pihole.lab:9100'
            - 'lb-1.lab:9100'
            - 'lb-2.lab:9100'
            - 'vpn-1.lab:9100'
            - 'vpn-2.lab:9100'
            - 'jump.lab:9100'
            - 'proxmox-1.lab:9100'
            - 'proxmox-2.lab:9100'
            - 'k3s-control-1.lab:9100'
            - 'k3s-control-2.lab:9100'
            - 'k3s-control-3.lab:9100'
            - 'k3s-worker-1.lab:9100'
            - 'k3s-worker-2.lab:9100'
            - 'mariadb-1.lab:9100'
            - 'mariadb-2.lab:9100'

      - job_name: 'pve'
        static_configs:
          - targets:
            - proxmox-1.lab
            - proxmox-2.lab
        metrics_path: /pve
        params:
          module: [default]
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: pve-exporter.monitoring.svc:9221

    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
