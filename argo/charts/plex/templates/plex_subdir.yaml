apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/auth-signin: https://plexmox.com
    nginx.ingress.kubernetes.io/auth-url: https://plexmox.com/api/v2/auth?group=4
    # nginx.ingress.kubernetes.io/rewrite-target: $1
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

      rewrite /plex(.*) $1 break;

      proxy_set_header X-Plex-Client-Identifier $http_x_plex_client_identifier;
      proxy_set_header X-Plex-Device $http_x_plex_device;
      proxy_set_header X-Plex-Device-Name $http_x_plex_device_name;
      proxy_set_header X-Plex-Platform $http_x_plex_platform;
      proxy_set_header X-Plex-Platform-Version $http_x_plex_platform_version;
      proxy_set_header X-Plex-Product $http_x_plex_product;
      proxy_set_header X-Plex-Token $http_x_plex_token;
      proxy_set_header X-Plex-Version $http_x_plex_version;
      proxy_set_header X-Plex-Nocache $http_x_plex_nocache;
      proxy_set_header X-Plex-Provides $http_x_plex_provides;
      proxy_set_header X-Plex-Device-Vendor $http_x_plex_device_vendor;
      proxy_set_header X-Plex-Model $http_x_plex_model;

      proxy_set_header Accept-Encoding "";
      sub_filter
      '</head>'
      '<link rel="stylesheet" type="text/css" href="https://theme-park.dev/css/base/plex/nord.css">
      </head>';
      sub_filter_once on;

      if ($http_referer ~* /plex) {
          rewrite ^/web/(.*) /plex/web/$1? redirect;
      }
  name: plex-subdir
spec:
  rules:
  - host: plexmox.com
    http:
      paths:
      - backend:
          service:
            name: plex
            port:
              number: 32400
        path: /plex/
        pathType: Prefix
  tls:
  - hosts:
    - plexmox.com
    secretName: plexmox-com-tls
