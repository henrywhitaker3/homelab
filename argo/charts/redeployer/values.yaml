# Default values for redeployer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: bitnami/kubectl
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

role:
  name: restart-deployment

jobs:
  - name: sonarr
    command: kubectl -n media rollout restart deployment sonarr
    schedule: "0 4 * * 6"
  - name: radarr
    command: kubectl -n media rollout restart deployment radarr
    schedule: "0 4 * * 6"
  - name: prowlarr
    command: kubectl -n media rollout restart deployment prowlarr
    schedule: "0 4 * * 6"
  - name: transmission
    command: kubectl -n media rollout restart deployment transmission
    schedule: "0 4 * * 6"
  - name: overseerr
    command: kubectl -n media rollout restart deployment overseerr
    schedule: "0 4 * * 6"
  - name: tautulli
    command: kubectl -n media rollout restart deployment tautulli
    schedule: "0 4 * * 6"
  - name: organizr
    command: kubectl -n media rollout restart deployment organizr
    schedule: "0 4 * * 6"
  - name: plex
    command: kubectl -n media rollout restart deployment plex
    schedule: "0 4 * * 6"
  - name: kuma
    command: kubectl -n monitoring rollout restart deployment uptime-kuma
    schedule: "0 4 * * 6"
  - name: rebalanace-plex
    schedule: "*/5 * * * *"
    command: |
      #!/bin/bash

      preferred_available=$(kubectl get node k8s-control-3 | tail -n 1 | tr -s ' ' | cut -d ' ' -f 2)
      current_node=$(kubectl -n media get pods -l app.kubernetes.io/name=plex -o=wide | tail -n 1 | tr -s ' ' | cut -d' ' -f7)

      if [ $current_node == "k8s-control-3" ]; then
        echo Plex running on preferred node
        exit 0
      else
        echo Plex not running on preferred node
      fi

      if [ $preferred_available == "Ready" ]; then
        echo Preferred node available
        kubectl -n media rollout restart deployment plex
        exit 0
      else
        echo Preferred node unavailable
        exit 0
      fi
