---
- name: Configure vpn servers

  hosts: vpn

  roles:
    - user
    - common
    - vip
    - node_exporter

  vars:
    - vip_ips: ["10.0.0.13"]
    - vip_priority_host: vpn-1

  vars_files:
    - ../vars/main.yaml
    - vars/vpn_secrets.yaml

  handlers:
    - name: restart wireguard
      tags:
        - vpn
        - wireguard
      become: true
      ansible.builtin.service:
        name: wg-quick@wg0.service
        state: restarted

  tasks:
    - name: Enable non local IP binding
      tags:
        - vpn
        - wireguard
      become: true
      ansible.posix.sysctl:
        name: "{{ item }}"
        value: "1"
        state: present
        reload: true
      loop:
        - net.ipv6.conf.all.forwarding
        - net.ipv4.ip_forward

    - name: Install wireguard
      tags:
        - vpn
        - wireguard
      become: true
      ansible.builtin.apt:
        name: wireguard
        state: latest

    - name: Copy over server config
      tags:
        - vpn
        - wireguard
      become: true
      ansible.builtin.template:
        src: templates/server.conf
        dest: /etc/wireguard/wg0.conf
        owner: root
        group: root
        mode: "0700"
      notify: restart wireguard

    - name: Start wireguard service
      tags:
        - vpn
        - wireguard
      become: true
      ansible.builtin.service:
        name: wg-quick@wg0.service
        state: started
        enabled: true

    - name: Define healthchecks
      tags:
        - crog
      become: true
      ansible.builtin.set_fact:
        crog_actions:
          - name: VPN Interface Status
            command: wg show wg0
            code: 0
            cron: "* * * * *"
            when:
              start: "{{ healthchecks[inventory_hostname] }}/start"
              success: "{{ healthchecks[inventory_hostname] }}"
              failure: "{{ healthchecks[inventory_hostname] }}/fail"

    - name: Setup crog service
      tags: crog
      ansible.builtin.import_role:
        name: crog
